"""Add not null contraint and default values

Revision ID: 4bf5d7b715f7
Revises: f183cab9441f
Create Date: 2024-06-19 19:55:12.878626

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4bf5d7b715f7"
down_revision = "f183cab9441f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("address", schema=None) as batch_op:
        batch_op.alter_column("street", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("city", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("country", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("zip_code", existing_type=sa.VARCHAR(length=120), nullable=False)

    with op.batch_alter_table("auth_user", schema=None) as batch_op:
        batch_op.alter_column("username", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("password", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("email", existing_type=sa.VARCHAR(length=120), nullable=False)

    with op.batch_alter_table("cart", schema=None) as batch_op:
        batch_op.alter_column("timestamp", existing_type=postgresql.TIMESTAMP(), nullable=False)
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)
        batch_op.alter_column("auth_user_id", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("cart_item", schema=None) as batch_op:
        batch_op.alter_column("shopping_cart_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("quantity", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("city_monthly_reports", schema=None) as batch_op:
        batch_op.alter_column("city", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("month", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("year", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("count", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)

    with op.batch_alter_table("delivery_method", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("price", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)

    with op.batch_alter_table("invoice", schema=None) as batch_op:
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)

    with op.batch_alter_table("invoice_monthly_reports", schema=None) as batch_op:
        batch_op.alter_column("month", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("year", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("count", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)

    with op.batch_alter_table("order", schema=None) as batch_op:
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)
        batch_op.alter_column("datetime", existing_type=postgresql.TIMESTAMP(), nullable=False)

    with op.batch_alter_table("order_status", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=False)

    with op.batch_alter_table("product_category", schema=None) as batch_op:
        batch_op.alter_column("category_name", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("size_type_id", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("product_item", schema=None) as batch_op:
        batch_op.alter_column("stock_number", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("timestamp", existing_type=postgresql.TIMESTAMP(), nullable=False)
        batch_op.alter_column("size_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("product_type_id", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("product_monthly_reports", schema=None) as batch_op:
        batch_op.alter_column("month", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("year", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("count", existing_type=sa.INTEGER(), nullable=False)
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)

    with op.batch_alter_table("product_type", schema=None) as batch_op:
        batch_op.alter_column("price", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=False)

    with op.batch_alter_table("size", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=False)
        batch_op.alter_column("size_type_id", existing_type=sa.INTEGER(), nullable=False)

    with op.batch_alter_table("size_type", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("size_type", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("size", schema=None) as batch_op:
        batch_op.alter_column("size_type_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("product_type", schema=None) as batch_op:
        batch_op.alter_column("price", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)

    with op.batch_alter_table("product_monthly_reports", schema=None) as batch_op:
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)
        batch_op.alter_column("count", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("year", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("month", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("product_item", schema=None) as batch_op:
        batch_op.alter_column("product_type_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("size_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("timestamp", existing_type=postgresql.TIMESTAMP(), nullable=True)
        batch_op.alter_column("stock_number", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("product_category", schema=None) as batch_op:
        batch_op.alter_column("size_type_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("category_name", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("order_status", schema=None) as batch_op:
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("order", schema=None) as batch_op:
        batch_op.alter_column("datetime", existing_type=postgresql.TIMESTAMP(), nullable=True)
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)

    with op.batch_alter_table("invoice_monthly_reports", schema=None) as batch_op:
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)
        batch_op.alter_column("count", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("year", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("month", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("invoice", schema=None) as batch_op:
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)

    with op.batch_alter_table("delivery_method", schema=None) as batch_op:
        batch_op.alter_column("price", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)
        batch_op.alter_column("name", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("city_monthly_reports", schema=None) as batch_op:
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)
        batch_op.alter_column("count", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("year", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("month", existing_type=sa.VARCHAR(length=120), nullable=True)
        batch_op.alter_column("city", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("cart_item", schema=None) as batch_op:
        batch_op.alter_column("quantity", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("shopping_cart_id", existing_type=sa.INTEGER(), nullable=True)

    with op.batch_alter_table("cart", schema=None) as batch_op:
        batch_op.alter_column("auth_user_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column("total", existing_type=sa.DOUBLE_PRECISION(precision=53), nullable=True)
        batch_op.alter_column("timestamp", existing_type=postgresql.TIMESTAMP(), nullable=True)

    with op.batch_alter_table("auth_user", schema=None) as batch_op:
        batch_op.alter_column("email", existing_type=sa.VARCHAR(length=120), nullable=True)
        batch_op.alter_column("password", existing_type=sa.VARCHAR(length=120), nullable=True)
        batch_op.alter_column("username", existing_type=sa.VARCHAR(length=120), nullable=True)

    with op.batch_alter_table("address", schema=None) as batch_op:
        batch_op.alter_column("zip_code", existing_type=sa.VARCHAR(length=120), nullable=True)
        batch_op.alter_column("country", existing_type=sa.VARCHAR(length=120), nullable=True)
        batch_op.alter_column("city", existing_type=sa.VARCHAR(length=120), nullable=True)
        batch_op.alter_column("street", existing_type=sa.VARCHAR(length=120), nullable=True)

    # ### end Alembic commands ###
